// <auto-generated />
using System;
using ChatPlatformBackend.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChatPlatformBackend.Migrations
{
    [DbContext(typeof(ChatAppContext))]
    partial class ChatAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.5");

            modelBuilder.Entity("ChatPlatformBackend.Models.GroupChat", b =>
                {
                    b.Property<int>("GroupChatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("GroupChatId");

                    b.ToTable("GroupChats");
                });

            modelBuilder.Entity("ChatPlatformBackend.Models.Message", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT");

                    b.Property<int?>("GroupChatId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PrivateChatId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("MessageId");

                    b.HasIndex("GroupChatId");

                    b.HasIndex("PrivateChatId");

                    b.HasIndex("UserId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("ChatPlatformBackend.Models.PrivateChat", b =>
                {
                    b.Property<int>("PrivateChatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("PrivateChatId");

                    b.ToTable("PrivateChats");
                });

            modelBuilder.Entity("ChatPlatformBackend.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GroupChatUser", b =>
                {
                    b.Property<int>("GroupChatsGroupChatId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UsersUserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("GroupChatsGroupChatId", "UsersUserId");

                    b.HasIndex("UsersUserId");

                    b.ToTable("GroupChatUser");
                });

            modelBuilder.Entity("PrivateChatUser", b =>
                {
                    b.Property<int>("PrivateChatsPrivateChatId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UsersUserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PrivateChatsPrivateChatId", "UsersUserId");

                    b.HasIndex("UsersUserId");

                    b.ToTable("PrivateChatUser");
                });

            modelBuilder.Entity("ChatPlatformBackend.Models.Message", b =>
                {
                    b.HasOne("ChatPlatformBackend.Models.GroupChat", "GroupChat")
                        .WithMany()
                        .HasForeignKey("GroupChatId");

                    b.HasOne("ChatPlatformBackend.Models.PrivateChat", "PrivateChat")
                        .WithMany()
                        .HasForeignKey("PrivateChatId");

                    b.HasOne("ChatPlatformBackend.Models.User", "User")
                        .WithMany("Messages")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GroupChat");

                    b.Navigation("PrivateChat");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GroupChatUser", b =>
                {
                    b.HasOne("ChatPlatformBackend.Models.GroupChat", null)
                        .WithMany()
                        .HasForeignKey("GroupChatsGroupChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChatPlatformBackend.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PrivateChatUser", b =>
                {
                    b.HasOne("ChatPlatformBackend.Models.PrivateChat", null)
                        .WithMany()
                        .HasForeignKey("PrivateChatsPrivateChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChatPlatformBackend.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ChatPlatformBackend.Models.User", b =>
                {
                    b.Navigation("Messages");
                });
#pragma warning restore 612, 618
        }
    }
}
